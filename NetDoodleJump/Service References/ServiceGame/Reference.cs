//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetDoodleJump.ServiceGame {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceGame.IServiceGame", CallbackContract=typeof(NetDoodleJump.ServiceGame.IServiceGameCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceGame {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/Connect", ReplyAction="http://tempuri.org/IServiceGame/ConnectResponse")]
        int Connect(string namer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/Connect", ReplyAction="http://tempuri.org/IServiceGame/ConnectResponse")]
        System.Threading.Tasks.Task<int> ConnectAsync(string namer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/StartGame", ReplyAction="http://tempuri.org/IServiceGame/StartGameResponse")]
        bool StartGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/StartGame", ReplyAction="http://tempuri.org/IServiceGame/StartGameResponse")]
        System.Threading.Tasks.Task<bool> StartGameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/Disconnect", ReplyAction="http://tempuri.org/IServiceGame/DisconnectResponse")]
        void Disconnect(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/Disconnect", ReplyAction="http://tempuri.org/IServiceGame/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/GetXcoordinate", ReplyAction="http://tempuri.org/IServiceGame/GetXcoordinateResponse")]
        int GetXcoordinate(int id, int x, int formWidth, int edgeWidth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/GetXcoordinate", ReplyAction="http://tempuri.org/IServiceGame/GetXcoordinateResponse")]
        System.Threading.Tasks.Task<int> GetXcoordinateAsync(int id, int x, int formWidth, int edgeWidth);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceGame/SendPlayerInfo")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void SendPlayerInfo(object[] info, int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceGame/SendPlayerInfo")]
        System.Threading.Tasks.Task SendPlayerInfoAsync(object[] info, int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceGameCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceGame/PlayerInfoCallback")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void PlayerInfoCallback(object[] info);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceGame/GameOverCallback")]
        void GameOverCallback();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceGameChannel : NetDoodleJump.ServiceGame.IServiceGame, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceGameClient : System.ServiceModel.DuplexClientBase<NetDoodleJump.ServiceGame.IServiceGame>, NetDoodleJump.ServiceGame.IServiceGame {
        
        public ServiceGameClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceGameClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceGameClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGameClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGameClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int Connect(string namer) {
            return base.Channel.Connect(namer);
        }
        
        public System.Threading.Tasks.Task<int> ConnectAsync(string namer) {
            return base.Channel.ConnectAsync(namer);
        }
        
        public bool StartGame() {
            return base.Channel.StartGame();
        }
        
        public System.Threading.Tasks.Task<bool> StartGameAsync() {
            return base.Channel.StartGameAsync();
        }
        
        public void Disconnect(int id) {
            base.Channel.Disconnect(id);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(int id) {
            return base.Channel.DisconnectAsync(id);
        }
        
        public int GetXcoordinate(int id, int x, int formWidth, int edgeWidth) {
            return base.Channel.GetXcoordinate(id, x, formWidth, edgeWidth);
        }
        
        public System.Threading.Tasks.Task<int> GetXcoordinateAsync(int id, int x, int formWidth, int edgeWidth) {
            return base.Channel.GetXcoordinateAsync(id, x, formWidth, edgeWidth);
        }
        
        public void SendPlayerInfo(object[] info, int id) {
            base.Channel.SendPlayerInfo(info, id);
        }
        
        public System.Threading.Tasks.Task SendPlayerInfoAsync(object[] info, int id) {
            return base.Channel.SendPlayerInfoAsync(info, id);
        }
    }
}
